function task53e(N)

addpath ..\Grids
addpath ..\Oppgave1
%% Get triangulation
[p,tri,edge] = getBox(N);

C  = @(E,v)reshape([(E.*(v-1.0))./(v+v.^2.*2.0-1.0),-(E.*v)./(v+v.^2.*2.0-1.0),-(E.*v)./(v+v.^2.*2.0-1.0),0.0,0.0,0.0,-(E.*v)./(v+v.^2.*2.0-1.0),(E.*(v-1.0))./(v+v.^2.*2.0-1.0),-(E.*v)./(v+v.^2.*2.0-1.0),0.0,0.0,0.0,-(E.*v)./(v+v.^2.*2.0-1.0),-(E.*v)./(v+v.^2.*2.0-1.0),(E.*(v-1.0))./(v+v.^2.*2.0-1.0),0.0,0.0,0.0,0.0,0.0,0.0,(E.*(1.0./2.0))./(v+1.0),0.0,0.0,0.0,0.0,0.0,0.0,(E.*(1.0./2.0))./(v+1.0),0.0,0.0,0.0,0.0,0.0,0.0,(E.*(1.0./2.0))./(v+1.0)],[6,6]);
B  = @(p1,p2,p3,p4)reshape([p2(2).*p3(3)-p3(2).*p2(3)-p2(2).*p4(3)+p4(2).*p2(3)+p3(2).*p4(3)-p4(2).*p3(3),0.0,0.0,0.0,p2(1).*p3(2)-p3(1).*p2(2)-p2(1).*p4(2)+p4(1).*p2(2)+p3(1).*p4(2)-p4(1).*p3(2),-p2(1).*p3(3)+p3(1).*p2(3)+p2(1).*p4(3)-p4(1).*p2(3)-p3(1).*p4(3)+p4(1).*p3(3),0.0,-p2(1).*p3(3)+p3(1).*p2(3)+p2(1).*p4(3)-p4(1).*p2(3)-p3(1).*p4(3)+p4(1).*p3(3),0.0,p2(1).*p3(2)-p3(1).*p2(2)-p2(1).*p4(2)+p4(1).*p2(2)+p3(1).*p4(2)-p4(1).*p3(2),0.0,p2(2).*p3(3)-p3(2).*p2(3)-p2(2).*p4(3)+p4(2).*p2(3)+p3(2).*p4(3)-p4(2).*p3(3),0.0,0.0,p2(1).*p3(2)-p3(1).*p2(2)-p2(1).*p4(2)+p4(1).*p2(2)+p3(1).*p4(2)-p4(1).*p3(2),-p2(1).*p3(3)+p3(1).*p2(3)+p2(1).*p4(3)-p4(1).*p2(3)-p3(1).*p4(3)+p4(1).*p3(3),p2(2).*p3(3)-p3(2).*p2(3)-p2(2).*p4(3)+p4(2).*p2(3)+p3(2).*p4(3)-p4(2).*p3(3),0.0,-p1(2).*p3(3)+p3(2).*p1(3)+p1(2).*p4(3)-p4(2).*p1(3)-p3(2).*p4(3)+p4(2).*p3(3),0.0,0.0,0.0,-p1(1).*p3(2)+p3(1).*p1(2)+p1(1).*p4(2)-p4(1).*p1(2)-p3(1).*p4(2)+p4(1).*p3(2),p1(1).*p3(3)-p3(1).*p1(3)-p1(1).*p4(3)+p4(1).*p1(3)+p3(1).*p4(3)-p4(1).*p3(3),0.0,p1(1).*p3(3)-p3(1).*p1(3)-p1(1).*p4(3)+p4(1).*p1(3)+p3(1).*p4(3)-p4(1).*p3(3),0.0,-p1(1).*p3(2)+p3(1).*p1(2)+p1(1).*p4(2)-p4(1).*p1(2)-p3(1).*p4(2)+p4(1).*p3(2),0.0,-p1(2).*p3(3)+p3(2).*p1(3)+p1(2).*p4(3)-p4(2).*p1(3)-p3(2).*p4(3)+p4(2).*p3(3),0.0,0.0,-p1(1).*p3(2)+p3(1).*p1(2)+p1(1).*p4(2)-p4(1).*p1(2)-p3(1).*p4(2)+p4(1).*p3(2),p1(1).*p3(3)-p3(1).*p1(3)-p1(1).*p4(3)+p4(1).*p1(3)+p3(1).*p4(3)-p4(1).*p3(3),-p1(2).*p3(3)+p3(2).*p1(3)+p1(2).*p4(3)-p4(2).*p1(3)-p3(2).*p4(3)+p4(2).*p3(3),0.0,p1(2).*p2(3)-p2(2).*p1(3)-p1(2).*p4(3)+p4(2).*p1(3)+p2(2).*p4(3)-p4(2).*p2(3),0.0,0.0,0.0,p1(1).*p2(2)-p2(1).*p1(2)-p1(1).*p4(2)+p4(1).*p1(2)+p2(1).*p4(2)-p4(1).*p2(2),-p1(1).*p2(3)+p2(1).*p1(3)+p1(1).*p4(3)-p4(1).*p1(3)-p2(1).*p4(3)+p4(1).*p2(3),0.0,-p1(1).*p2(3)+p2(1).*p1(3)+p1(1).*p4(3)-p4(1).*p1(3)-p2(1).*p4(3)+p4(1).*p2(3),0.0,p1(1).*p2(2)-p2(1).*p1(2)-p1(1).*p4(2)+p4(1).*p1(2)+p2(1).*p4(2)-p4(1).*p2(2),0.0,p1(2).*p2(3)-p2(2).*p1(3)-p1(2).*p4(3)+p4(2).*p1(3)+p2(2).*p4(3)-p4(2).*p2(3),0.0,0.0,p1(1).*p2(2)-p2(1).*p1(2)-p1(1).*p4(2)+p4(1).*p1(2)+p2(1).*p4(2)-p4(1).*p2(2),-p1(1).*p2(3)+p2(1).*p1(3)+p1(1).*p4(3)-p4(1).*p1(3)-p2(1).*p4(3)+p4(1).*p2(3),p1(2).*p2(3)-p2(2).*p1(3)-p1(2).*p4(3)+p4(2).*p1(3)+p2(2).*p4(3)-p4(2).*p2(3),0.0,-p1(2).*p2(3)+p2(2).*p1(3)+p1(2).*p3(3)-p3(2).*p1(3)-p2(2).*p3(3)+p3(2).*p2(3),0.0,0.0,0.0,-p1(1).*p2(2)+p2(1).*p1(2)+p1(1).*p3(2)-p3(1).*p1(2)-p2(1).*p3(2)+p3(1).*p2(2),p1(1).*p2(3)-p2(1).*p1(3)-p1(1).*p3(3)+p3(1).*p1(3)+p2(1).*p3(3)-p3(1).*p2(3),0.0,p1(1).*p2(3)-p2(1).*p1(3)-p1(1).*p3(3)+p3(1).*p1(3)+p2(1).*p3(3)-p3(1).*p2(3),0.0,-p1(1).*p2(2)+p2(1).*p1(2)+p1(1).*p3(2)-p3(1).*p1(2)-p2(1).*p3(2)+p3(1).*p2(2),0.0,-p1(2).*p2(3)+p2(2).*p1(3)+p1(2).*p3(3)-p3(2).*p1(3)-p2(2).*p3(3)+p3(2).*p2(3),0.0,0.0,-p1(1).*p2(2)+p2(1).*p1(2)+p1(1).*p3(2)-p3(1).*p1(2)-p2(1).*p3(2)+p3(1).*p2(2),p1(1).*p2(3)-p2(1).*p1(3)-p1(1).*p3(3)+p3(1).*p1(3)+p2(1).*p3(3)-p3(1).*p2(3),-p1(2).*p2(3)+p2(2).*p1(3)+p1(2).*p3(3)-p3(2).*p1(3)-p2(2).*p3(3)+p3(2).*p2(3),0.0],[6,12]);
A6 = @(p1,p2,p3,p4)p1(1).*p2(2).*p3(3)-p1(1).*p3(2).*p2(3)-p2(1).*p1(2).*p3(3)+p2(1).*p3(2).*p1(3)+p3(1).*p1(2).*p2(3)-p3(1).*p2(2).*p1(3)-p1(1).*p2(2).*p4(3)+p1(1).*p4(2).*p2(3)+p2(1).*p1(2).*p4(3)-p2(1).*p4(2).*p1(3)-p4(1).*p1(2).*p2(3)+p4(1).*p2(2).*p1(3)+p1(1).*p3(2).*p4(3)-p1(1).*p4(2).*p3(3)-p3(1).*p1(2).*p4(3)+p3(1).*p4(2).*p1(3)+p4(1).*p1(2).*p3(3)-p4(1).*p3(2).*p1(3)-p2(1).*p3(2).*p4(3)+p2(1).*p4(2).*p3(3)+p3(1).*p2(2).*p4(3)-p3(1).*p4(2).*p2(3)-p4(1).*p2(2).*p3(3)+p4(1).*p3(2).*p2(3);



E = 1;
v = 0;
fx = @(x,y,z) (E/((1+v)*(1-2*v)))* ( 4*v*x*y*(z^2 - 1) - 2*(y^2 - 1)*(v - 1/2)*(x^2 + 2*z*x - 1) - 2*(z^2 - 1)*(v - 1/2)*(x^2 + 2*y*x - 1) - 2*(y^2 - 1)*(z^2 - 1)*(v - 1) + 4*v*x*z*(y^2 - 1));
fy = @(x,y,z) (E/((1+v)*(1-2*v)))* (4*v*x*y*(z^2 - 1) - (2*(y^2 - 1)*(z^2 - 1) + 4*x*y*(z^2 - 1))*(v - 1/2) - 2*(x^2 - 1)*(z^2 - 1)*(v - 1) - (2*(x^2 - 1)*(y^2 - 1) + 4*y*z*(x^2 - 1))*(v - 1/2) + 4*v*y*z*(x^2 - 1));
fz = @(x,y,z) (E/((1+v)*(1-2*v)))* (4*v*x*z*(y^2 - 1) - (2*(y^2 - 1)*(z^2 - 1) + 4*x*z*(y^2 - 1))*(v - 1/2) - 2*(x^2 - 1)*(y^2 - 1)*(v - 1) - (2*(x^2 - 1)*(z^2 - 1) + 4*y*z*(x^2 - 1))*(v - 1/2) + 4*v*y*z*(x^2 - 1));

exact = @(x,y,z) (x.^2-1).*(y.^2-1).*(z.^2-1);

Ak = @(p1,p2,p3,p4) B(p1,p2,p3,p4)'*C(E,v)*B(p1,p2,p3,p4)*(1/6)*1/A6(p1,p2,p3,p4);

%% Preallocate and iterate over all elements
N = max(max(tri));
A = spalloc(3*N,3*N,10*N);
F = zeros(3*N,1);

maxi = 1;
for i = 1:length(tri)
    p1 = p(tri(i,1),:)'; p2 = p(tri(i,2),:)'; p3 = p(tri(i,3),:)'; p4 = p(tri(i,4),:)'; 
    %Finding the right indices for A by i = 3*(î-1) + d 
    tempIndices = [3*(tri(i,:)-1)+1 ; 3*(tri(i,:)-1)+2 ; 3*(tri(i,:)-1)+3];
    indices = tempIndices(:);
    A(indices,indices) = A(indices,indices) + Ak(p1,p2,p3,p4);
    maxi = max(indices,maxi);
    % Finding the quadrature for fx and fy separate, easier to use existing
    % code this way
    Fkx = quadrature3D(p1,p2,p3,p4,4,fx);
    Fky = quadrature3D(p1,p2,p3,p4,4,fy);
    Fkz = quadrature3D(p1,p2,p3,p4,4,fz);
    Fk = [Fkx';Fky';Fkz'];
    Fk = Fk(:);
    F(indices) = F(indices) + Fk;
end

%% Implementing boundary conditions and solving
y = (~ismember(tri,edge)).*tri;
inner_vertices_2 = unique(y);
inner_vertices_2 = inner_vertices_2(2:end);

tempIV = [3*(inner_vertices_2-1)+1 ; 3*(inner_vertices_2-1)+2 ; 3*(inner_vertices_2-1)+3]';
inner_vertices = tempIV(:);

A = A(inner_vertices,inner_vertices);
F = F(inner_vertices);


u = A\F;
u_sol = zeros(3*length(p),1);
u_sol(inner_vertices) = u;
ux = u_sol(1:3:end);
uy = u_sol(2:3:end);
uz = u_sol(3:3:end);

u_exact = exact(p(:,1),p(:,2),p(:,3));
%% Visualization




end





